/*STUDENT (USN, SName, Address, Phone,
Gender) SEMSEC (SSID, Sem, Sec)
CLASS (USN, SSID)
SUBJECT (Subcode, Title, Sem, Credits)
IAMARKS (USN, Subcode, SSID, Test1, Test2, Test3,
FinalIA) Write SQL queries to
1. List all the student details studying in fourth semester ‘C'section.
2. Compute the total number of male and female students in each semester
and in each section.
3. Create a view of Test1 marks of student USN ‘1SI15IS101' in allsubjects.
4. Calculate the FinalIA (average of best two test marks) and
update the corresponding table for allstudents.
5. Categorize students based on the
followingcriterion: If FinalIA = 17 to 20 then
CAT =‘Outstanding'
If FinalIA = 12 to 16 then CAT =
‘Average' If FinalIA< 12 then CAT =
‘Weak'
Give these details only for 8th semester A, B, and C section students.
*/


/*table creation*/
CREATE TABLE STUDENT (
USN VARCHAR (10) PRIMARY KEY,
SNAME VARCHAR (25),
ADDRESS VARCHAR (25),
PHONE NUMBER (10),
GENDER CHAR (1));

CREATE TABLE SEMSEC (
SSID VARCHAR (5) PRIMARY KEY,
SEM NUMBER (2),
SEC CHAR (1));

CREATE TABLE CLASS (
USN VARCHAR (10),
SSID VARCHAR (5), PRIMARY
KEY (USN, SSID),
FOREIGN KEY (USN) REFERENCES STUDENT (USN),
FOREIGN KEY (SSID) REFERENCES SEMSEC (SSID));

CREATE TABLE SUBJECT (
SUBCODE VARCHAR (8),
TITLE VARCHAR (20),
SEM NUMBER (2),
CREDITS NUMBER (2),
PRIMARY KEY (SUBCODE));

CREATE TABLE IAMARKS (
USN VARCHAR (10),
SUBCODE VARCHAR (8),
SSID VARCHAR(5),
TEST1 NUMBER(2),
TEST2 NUMBER(2),
TEST3 NUMBER(2),
FINALIA NUMBER (2),
PRIMARY KEY (USN, SUBCODE, SSID),
FOREIGN KEY (USN) REFERENCES STUDENT (USN),
FOREIGN KEY (SUBCODE) REFERENCES SUBJECT (SUBCODE),
FOREIGN KEY (SSID) REFERENCES SEMSEC (SSID));

/*insertion*/

INSERT INTO STUDENT VALUES ('1SI20IS001','KAVITHA','TUMKUR',9980168806,'F');
INSERT INTO STUDENT VALUES ('1SI20IS020','AKSHAY','BELAGAVI',8877881122,'M');
INSERT INTO STUDENT VALUES('1SI20IS062','SANDHYA','BENGALURU',7722829912,'F');
INSERT INTO STUDENT VALUES('1SI20IS091','TEESHA','BENGALURU',7712312312,'F');
INSERT INTO STUDENT VALUES('1SI20IS066','SUPRIYA','MANGALURU',8877881122,'F');
INSERT INTO STUDENT VALUES('1SI14IS010','ABHAY','BENGALURU',9900211201,'M');
INSERT INTO STUDENT VALUES('1SI14IS032','BHASKAR','BENGALURU',9923211099,'M');
INSERT INTO STUDENT VALUES ('1SI14IS025','ASMI','BENGALURU', 7894737377,'F');
INSERT INTO STUDENT VALUES ('1SI15IS011','AJAY','TUMKUR', 9845091341,'M');
INSERT INTO STUDENT VALUES ('1SI15IS029','CHITRA','DAVANGERE',7696772121,'F');
INSERT INTO STUDENT VALUES ('1SI15IS045','JEEVA','BELLARY', 9944850121,'M');
INSERT INTO STUDENT VALUES ('1SI15IS091','SANTOSH','MANGALURU',8812332201,'M');
INSERT INTO STUDENT VALUES('1SI16IS045','ISMAIL','KALBURGI',9900232201,'M');
INSERT INTO STUDENT VALUES ('1SI16IS088','SAMEERA','SHIMOGA',9905542212,'F');
INSERT INTO STUDENT VALUES ('1SI16IS122','VINAYAKA','CHIKAMAGALUR',8800880011,'M');

SELECT * FROM STUDENT ORDER BY USN;

INSERT INTO SEMSEC VALUES ('ISE8A', 8,'A');
INSERT INTO SEMSEC VALUES ('ISE8B', 8,'B');
INSERT INTO SEMSEC VALUES('ISE8C',8, 'C');
INSERT INTO SEMSEC VALUES ('ISE7A', 7,'A');
INSERT INTO SEMSEC VALUES('ISE7B',7,'B');
INSERT INTO SEMSEC VALUES ('ISE7C',7,'C');
INSERT INTO SEMSEC VALUES ('ISE6A', 6,'A'); 
INSERT INTO SEMSEC VALUES ('ISE6B', 6,'B'); 
INSERT INTO SEMSEC VALUES ('ISE6C', 6,'C');
INSERT INTO SEMSEC VALUES ('ISE5A', 5,'A');
INSERT INTO SEMSEC VALUES ('ISE5B', 5,'B'); 
INSERT INTO SEMSEC VALUES ('ISE5C', 5,'C');
INSERT INTO SEMSEC VALUES('ISE4A',4,'A');
INSERT INTO SEMSEC VALUES ('ISE4B', 4,'B');
INSERT INTO SEMSEC VALUES('ISE4C',4,'C');
INSERT INTO SEMSEC VALUES ('ISE3A', 3,'A');
INSERT INTO SEMSEC VALUES ('ISE3B', 3,'B');
INSERT INTO SEMSEC VALUES('ISE3C',3,'C');
INSERT INTO SEMSEC VALUES ('ISE2A', 2,'A');
INSERT INTO SEMSEC VALUES ('ISE2B', 2,'B');
INSERT INTO SEMSEC VALUES ('ISE2C', 2,'C');
INSERT INTO SEMSEC VALUES ('ISE1A', 1,'A');
INSERT INTO SEMSEC VALUES ('ISE1B', 1,'B');
INSERT INTO SEMSEC VALUES ('ISE1C', 1,'C');

SELECT * FROM SEMSEC ORDER BY SEM;

INSERT INTO CLASS VALUES('1SI20IS001', 'ISE3C');
INSERT INTO CLASS VALUES('1SI20IS020', 'ISE8A');
INSERT INTO CLASS VALUES('1SI20IS062', 'ISE8A');
INSERT INTO CLASS VALUES('1SI20IS066', 'ISE8B');
INSERT INTO CLASS VALUES('1SI20IS091', 'ISE8C');
INSERT INTO CLASS VALUES('1SI14IS010', 'ISE7A');
INSERT INTO CLASS VALUES('1SI14IS025', 'ISE7A');
INSERT INTO CLASS VALUES('1SI14IS032', 'ISE7A');
INSERT INTO CLASS VALUES('1SI15IS011', 'ISE4A');
INSERT INTO CLASS VALUES('1SI15IS029', 'ISE4A');
INSERT INTO CLASS VALUES('1SI15IS045', 'ISE4B');
INSERT INTO CLASS VALUES('1SI15IS091', 'ISE4C');
INSERT INTO CLASS VALUES('1SI16IS045', 'ISE3A');
INSERT INTO CLASS VALUES('1SI16IS088', 'ISE3B');
INSERT INTO CLASS VALUES('1SI16IS122', 'ISE3C');

SELECT * FROM CLASS ORDER BY USN;



INSERT INTO SUBJECT VALUES ('10IS81','ACA', 8, 4);
INSERT INTO SUBJECT VALUES ('10IS82','SSM', 8, 4);
INSERT INTO SUBJECT VALUES ('10IS83','NM', 8, 4);
INSERT INTO SUBJECT VALUES ('10IS84','CC', 8, 4);
INSERT INTO SUBJECT VALUES ('10IS85','PW', 8, 4);
INSERT INTO SUBJECT VALUES ('10IS71','OOAD', 7, 4);
INSERT INTO SUBJECT VALUES ('10IS72','ECS', 7, 4);
INSERT INTO SUBJECT VALUES ('10IS73','PTW', 7, 4); 
INSERT INTO SUBJECT VALUES ('10IS74','DWDM', 7, 4);
INSERT INTO SUBJECT VALUES ('E10IS75','JAVA', 7, 4); 
INSERT INTO SUBJECT VALUES ('10IS76','SAN', 7, 4);
INSERT INTO SUBJECT VALUES ('15IS51', 'ME', 5, 4);
INSERT INTO SUBJECT VALUES ('15IS52','CN', 5, 4);
INSERT INTO SUBJECT VALUES ('15IS53','DBMS', 5, 4);
INSERT INTO SUBJECT VALUES ('15IS54','ATC', 5, 4);
INSERT INTO SUBJECT VALUES ('15IS55','JAVA', 5, 3);
INSERT INTO SUBJECT VALUES ('15IS56','AI', 5, 3);
INSERT INTO SUBJECT VALUES ('15IS41','M4', 4, 4);
INSERT INTO SUBJECT VALUES ('15IS42','SE', 4, 4);
INSERT INTO SUBJECT VALUES ('15IS43','DAA', 4, 4);
INSERT INTO SUBJECT VALUES ('15IS44','MPMC', 4, 4);
INSERT INTO SUBJECT VALUES ('15IS45','OOC', 4, 3);
INSERT INTO SUBJECT VALUES ('15IS46','DC', 4, 3);
INSERT INTO SUBJECT VALUES ('15IS31','M3', 3, 4);
INSERT INTO SUBJECT VALUES ('15IS32','ADE', 3, 4);
INSERT INTO SUBJECT VALUES ('15IS33','DSA', 3, 4);
INSERT INTO SUBJECT VALUES ('15IS34','CO', 3, 4);
INSERT INTO SUBJECT VALUES ('15IS35','USP', 3, 3);
INSERT INTO SUBJECT VALUES ('15IS36','DMS', 3, 3);


INSERT INTO IAMARKS (USN, SUBCODE, SSID, TEST1, TEST2, TEST3)VALUES
('1SI20IS001','10IS85','ISE8C', 15, 15,12);
INSERT INTO IAMARKS (USN, SUBCODE, SSID, TEST1, TEST2, TEST3)VALUES
('1SI20IS001','10IS81','ISE8C', 15, 16,18);
INSERT INTO IAMARKS (USN, SUBCODE, SSID, TEST1, TEST2, TEST3)VALUES
('1SI20IS001','10IS82','ISE8C', 12, 19,14);
INSERT INTO IAMARKS (USN, SUBCODE, SSID, TEST1, TEST2, TEST3)VALUES
('1SI20IS001','10IS83','ISE8C', 19, 15,20);
INSERT INTO IAMARKS (USN, SUBCODE, SSID, TEST1, TEST2, TEST3)VALUES
('1SI20IS001','10IS84','ISE8C', 20, 16,19);

/*Labset 4*/

SELECT * FROM CLASS ORDER BY USN;
SELECT * FROM SEMSEC ORDER BY SEM;
SELECT * FROM STUDENT ORDER BY USN;
/* Querry 1*/


SELECT S.*, SS.SEM, SS.SEC
FROM STUDENT S, SEMSEC SS, CLASS C
WHERE S.USN = C.USN AND
SS.SSID = C.SSID AND
SS.SEM = 4 AND SS.SEc='C';


/* Querry 2*/


SELECT SS.SEM,SS.SEC,S.GENDER,COUNT(S.GENDER) AS COUNT 
FROM STUDENT S, SEMSEC SS, CLASS C
WHERE S.USN = C.USN AND SS.SSID =C.SSID
GROUP BY SS.SEM, SS.SEC, S.GENDER
ORDER BY SEM;


/* Querry 3*/


CREATE VIEW STU_TEST1_MARKS_VIEW AS
SELECT TEST1, SUBCODE
FROM IAMARKS
WHERE USN = '1SI20IS001';
SELECT * FROM STU_TEST1_MARKS_VIEW;


/* Querry 4*/

DELIMITER //
CREATE PROCEDURE AVG_MARKS()
BEGIN
DECLARE C_A INTEGER;
DECLARE C_B INTEGER;
DECLARE C_C INTEGER;
DECLARE C_SUM INTEGER;
DECLARE C_AVG INTEGER;
DECLARE C_USN VARCHAR(10);
DECLARE C_SUBCODE VARCHAR(8);
DECLARE C_SSID VARCHAR(5);
DECLARE C_IAMARKS CURSOR FOR
SELECT GREATEST(TEST1,TEST2) AS A, GREATEST(TEST1,TEST3) AS B, GREATEST(TEST3,TEST2) AS C, USN, SUBCODE, SSID
FROM IAMARKS
WHERE FINALIA IS NULL
FOR UPDATE;
OPEN C_IAMARKS;
LOOP
FETCH C_IAMARKS INTO C_A, C_B, C_C, C_USN, C_SUBCODE, C_SSID;
IF (C_A != C_B) THEN
    SET C_SUM=C_A+C_B;
ELSE
    SET C_SUM=C_A+C_C;
END IF;
SET C_AVG=C_SUM/2;
UPDATE IAMARKS SET FINALIA = C_AVG 
WHERE USN = C_USN AND SUBCODE = C_SUBCODE AND SSID = C_SSID;
END LOOP;
CLOSE C_IAMARKS;
END;
//

 DELIMITER //
 CALL AVG_MARKS();
 DELIMITER ;
 //
 select * from IAMARKS;
 DELIMITER //;


CREATE OR REPLACE PROCEDURE AVGMARKS 
IS
CURSOR C_IAMARKS IS
SELECT GREATEST(TEST1,TEST2) AS A, GREATEST(TEST1,TEST3) AS B, 
GREATEST(TEST3,TEST2) AS C
FROM IAMARKS
WHERE FINALIA IS NULL 
FOR UPDATE;
C_A NUMBER;
C_B NUMBER;
C_C NUMBER;
C_SM NUMBER;
C_AV NUMBER;
BEGIN
OPEN C_IAMARKS;
LOOP
FETCH C_IAMARKS INTO C_A, C_B, C_C; 
EXIT WHEN C_IAMARKS%NOTFOUND;
--DBMS_OUTPUT.PUT_LINE(C_A || ' ' || C_B || ' ' || C_C); 
IF (C_A != C_B) THEN
C_SM:=C_A+C_B; 
ELSE
C_SM:=C_A+C_C; 
END IF;
C_AV:=C_SM/2;
--DBMS_OUTPUT.PUT_LINE('SUM = '||C_SM);
--DBMS_OUTPUT.PUT_LINE('AVERAGE = '||C_AV);
UPDATE IAMARKS SET FINALIA=C_AV WHERE CURRENT OF C_IAMARKS;
END LOOP;
CLOSE C_IAMARKS; 
END;
/


SELECT * FROM IAMARKS;


BEGIN 
AVGMARKS;
END;
/


CREATE OR REPLACE PROCEDURE AVG_MARKS IS
CURSOR C_IAMARKS IS
SELECT GREATEST(TEST1,TEST2) AS A, GREATEST(TEST1,TEST3) AS B,
GREATEST(TEST3,TEST2) ASC
FROM IAMARKS
WHERE FINALIA IS NULL
FOR UPDATE;
12;
13;
15;
15;
12;
BEGIN
AVGMARKS;
END;
/


/* Querry 5*/


SELECT S.USN,S.SNAME,S.ADDRESS,S.PHONE,S.GENDER,
(CASE
WHEN IA.FINALIA BETWEEN 17 AND 20 THEN'OUTSTANDING' WHEN
IA.FINALIA BETWEEN 12 AND 16 THEN 'AVERAGE' ELSE 'WEAK'
END) AS CAT
FROM STUDENT S, SEMSEC SS, IAMARKS IA, SUBJECT SUB
WHERE S.USN = IA.USN AND
SS.SSID = IA.SSID AND
SUB.SUBCODE = IA.SUBCODE AND
SUB.SEM = 8;

INSERT INTO STUDENT VALUES ('1SI20IS001','KAVITHA','TUMKUR',9980168806,'F');
INSERT INTO CLASS VALUES('1SI20IS001', 'ISE3C');

SELECT * 
FROM  STUDENT S, CLASS C 
WHERE S.USN=C.USN AND S.USN='1SI20IS001';

INSERT INTO IAMARKS (USN, SUBCODE, SSID, TEST1, TEST2, TEST3)VALUES
('1SI20IS001','10IS85','ISE8C', 15, 15,12);


CREATE PROCEDURE AVG_MARKS()
BEGIN
DECLARE C_A INTEGER;
DECLARE C_B INTEGER;
DECLARE C_C INTEGER;
DECLARE C_SUM INTEGER;
DECLARE C_AVG INTEGER;
DECLARE C_USN VARCHAR(10);
DECLARE C_SUBCODE VARCHAR(8);
DECLARE C_SSID VARCHAR(5);
DECLARE C_IAMARKS CURSOR FOR
SELECT GREATEST(TEST1,TEST2) AS A, GREATEST(TEST1,TEST3) AS B, GREATEST(TEST3,TEST2) AS C, USN, SUBCODE, SSID
FROM IAMARKS
WHERE FINALIA IS NULL
FOR UPDATE;
OPEN C_IAMARKS;
LOOP
FETCH C_IAMARKS INTO C_A, C_B, C_C, C_USN, C_SUBCODE, C_SSID;
IF (C_A != C_B) THEN
    SET C_SUM=C_A+C_B;
ELSE
    SET C_SUM=C_A+C_C;
END IF;
SET C_AVG=C_SUM/2;
UPDATE IAMARKS SET FINALIA = C_AVG 
WHERE USN = C_USN AND SUBCODE = C_SUBCODE AND SSID = C_SSID;
END LOOP;
CLOSE C_IAMARKS;
END;
/

BEGIN
AVG_MARKS;
END;
/